# Generated by Django 5.2.5 on 2025-08-26 17:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0003_alter_user_managers"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(help_text="Exam duration in minutes"),
                ),
                ("max_attempts", models.PositiveIntegerField(default=1)),
                ("shuffle_questions", models.BooleanField(default=False)),
                ("show_results_after", models.BooleanField(default=False)),
                ("is_proctored", models.BooleanField(default=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("scheduled", "Scheduled"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "allowed_groups",
                    models.ManyToManyField(
                        related_name="exams", to="core.studentgroup"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        limit_choices_to={"user_type__in": ["faculty", "hod", "admin"]},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ExamAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attempt_number", models.PositiveIntegerField(default=1)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "actual_duration",
                    models.PositiveIntegerField(
                        blank=True, help_text="Actual time taken in minutes", null=True
                    ),
                ),
                ("violation_count", models.PositiveIntegerField(default=0)),
                ("screen_switch_count", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "In Progress"),
                            ("submitted", "Submitted"),
                            ("timed_out", "Timed Out"),
                            ("violation", "Violation Detected"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                ("score", models.FloatField(blank=True, null=True)),
                ("max_score", models.PositiveIntegerField(blank=True, null=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="exams.exam",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"user_type__in": ["faculty", "hod"]},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"user_type": "student"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exam_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "exam", "attempt_number")},
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("mcq", "Multiple Choice (MCQ)"),
                            ("coding", "Coding Problem"),
                            ("descriptive", "Descriptive Answer"),
                            ("file_upload", "File Upload"),
                        ],
                        max_length=20,
                    ),
                ),
                ("points", models.PositiveIntegerField(default=1)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "code_template",
                    models.TextField(
                        blank=True,
                        help_text="Initial code template for coding questions",
                    ),
                ),
                (
                    "test_cases",
                    models.JSONField(
                        blank=True, help_text="JSON structure for test cases", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="exams.exam",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option_text", models.CharField(max_length=500)),
                ("is_correct", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "question",
                    models.ForeignKey(
                        limit_choices_to={"question_type": "mcq"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="exams.question",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descriptive_answer", models.TextField(blank=True)),
                ("code_answer", models.TextField(blank=True)),
                (
                    "file_answer",
                    models.FileField(blank=True, null=True, upload_to="exam_answers/"),
                ),
                ("is_correct", models.BooleanField(blank=True, null=True)),
                ("points_awarded", models.FloatField(blank=True, null=True)),
                ("feedback", models.TextField(blank=True)),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "attempt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="exams.examattempt",
                    ),
                ),
                (
                    "mcq_answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="exams.option",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="exams.question"
                    ),
                ),
            ],
            options={
                "unique_together": {("attempt", "question")},
            },
        ),
    ]
